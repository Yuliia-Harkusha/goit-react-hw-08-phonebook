{"version":3,"file":"static/js/690.1a0a2310.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.js","utils/validationSchema.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerWrapper = styled.div`\n  width: 320px;\n  margin: 0 auto;\n  padding: 30px 10px;\n\n  @media screen and (min-width: 768px) {\n    width: 750px;\n  }\n`;\n","import { ContainerWrapper } from './Container.styled';\n\nexport const Container = ({ children }) => {\n  return <ContainerWrapper>{children}</ContainerWrapper>;\n};\n","import { Field, Form } from 'formik';\nimport styled from 'styled-components';\nimport { FaUserPlus, FaPuzzlePiece, FaAt } from 'react-icons/fa';\n\nexport const FormStyled = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  width: 320px;\n`;\nexport const Icon = styled(FaUserPlus, FaPuzzlePiece, FaAt)`\n  color: ${props => props.theme.colors.accent};\n  /* margin-right: ${props => props.theme.spacing(2)}; */\n`;\n\nexport const FormItem = styled.div`\n  display: flex;\n  justify-content: baseline;\n  gap: ${props => props.theme.spacing(2)};\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: ${props => props.theme.spacing(2)};\n  margin-bottom: ${props => props.theme.spacing(3)};\n  font-size: ${props => props.theme.fontSizes.small};\n  font-weight: 500;\n  color: ${props => props.theme.colors.gray};\n`;\n\nexport const Input = styled(Field)`\n  padding: ${props => props.theme.spacing(1)};\n  :focus-visible {\n    outline-color: ${props => props.theme.colors.gray};\n  }\n`;\n\nexport const Button = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: ${props => props.theme.spacing(3)};\n  padding: ${props => props.theme.spacing(2)} ${props => props.theme.spacing(4)};\n  cursor: pointer;\n  border: none;\n  border-radius: ${props => props.theme.radii.primary}px;\n  background-color: ${props => props.theme.colors.accent};\n  color: ${props => props.theme.colors.light};\n  font-weight: 500;\n  font-size: ${props => props.theme.fontSizes.small};\n  :hover,\n  :focus {\n    background-color: ${props => props.theme.colors.hover};\n    box-shadow: ${props => props.theme.shadows.small};\n  }\n`;\n\nexport const ErrorText = styled.p`\n  font-weight: 400;\n  color: ${props => props.theme.colors.orange};\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport { userLoginSchema } from 'utils/validationSchema';\nimport { logIn } from 'redux/auth/operations';\nimport {\n  FormStyled,\n  Label,\n  Input,\n  Button,\n  ErrorText,\n} from 'components/RegisterForm/RegisterForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    // form.reset();\n  };\n\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const FormError = ({ name }) => {\n    return (\n      <ErrorMessage\n        name={name}\n        render={message => <ErrorText>{message}</ErrorText>}\n      />\n    );\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onFormSubmit}\n      validationSchema={userLoginSchema}\n    >\n      {({ values, handleChange, handleSubmit, handleReset, isSubmitting }) => (\n        <FormStyled onSubmit={handleSubmit} autoComplete=\"off\">\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"E-mail\"\n              onChange={handleChange}\n              value={values.email}\n            />\n            <FormError name=\"email\" component=\"div\" />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n              value={values.pasword}\n            />\n            <FormError name=\"password\" component=\"div\" />\n          </Label>\n          <Button type=\"submit\" disabled={isSubmitting} onClick={handleReset}>\n            Log In\n          </Button>\n        </FormStyled>\n      )}\n    </Formik>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Container } from 'components/Container/Container';\n\nexport default function Login() {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n}\n","import * as Yup from 'yup';\n\nexport const userLoginSchema = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).max(16).required(),\n});\n\nexport const userRegisterSchema = Yup.object().shape({\n  name: Yup.string().min(2).max(30).required(),\n  email: Yup.string().email().required(),\n  password: Yup.string().min(6).max(16).required(),\n});\n"],"names":["ContainerWrapper","styled","Container","children","FormStyled","Form","Label","FaUserPlus","FaPuzzlePiece","FaAt","props","theme","colors","accent","spacing","fontSizes","small","gray","Input","Field","Button","radii","primary","light","hover","shadows","ErrorText","orange","LoginForm","dispatch","useDispatch","FormError","name","render","message","initialValues","email","password","onSubmit","e","preventDefault","form","currentTarget","logIn","elements","value","validationSchema","userLoginSchema","values","handleChange","handleSubmit","handleReset","isSubmitting","autoComplete","type","placeholder","onChange","component","pasword","disabled","onClick","Login","Yup","shape","required","min","max","userRegisterSchema"],"sourceRoot":""}